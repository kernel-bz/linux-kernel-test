#include <stdio.h>
#include <stdlib.h>

struct sched_domain {
    int a;
    int b;
    int c;
    int d;
};

struct s_data {
    struct sched_domain **sd;
};

#define per_cpu_ptr(ptr, cpu)	((typeof(ptr))(ptr) + cpu)

int main()
{
    const int nr_cpu_ids = 4;
    int i;
    struct s_data d;
    struct s_data d2;

    printf("size1 = %d\n", sizeof (void *));
    printf("size2 = %d\n", sizeof (void **));
    printf("sd1 = %d\n", sizeof (struct sched_domain));
    printf("sd2 = %d\n", sizeof (struct sched_domain *));

    for (i=0; i<nr_cpu_ids; i++) {
        d.sd[i] = malloc(sizeof (struct sched_domain));
        *d.sd[i] = (struct sched_domain) {
                .a = i,
                .b = i+1,
                .c = i+2,
                .d = i+3
        };
    }

    for (i=0; i<nr_cpu_ids; i++) {
        struct sched_domain *sdd = d.sd[i];
        printf("%d: %d, %d, %d, %d\n", i
               , sdd->a, sdd->b, sdd->c, sdd->d);
    }

    printf("test2\n");

    //d2.sd = calloc(nr_cpu_ids, sizeof (struct sched_domain));
    d2.sd = malloc(nr_cpu_ids * sizeof (struct sched_domain **));
    for (i=0; i<nr_cpu_ids; i++) {
        d2.sd[i] = malloc(sizeof (struct sched_domain));
        *d2.sd[i] = (struct sched_domain) {
                .a = i*10,
                .b = i*10,
                .c = i*20,
                .d = i*30
        };
    }

    printf("d2.sd = %p\n", d2.sd);
    printf("*d2.sd = %p\n", *d2.sd);

    for (i=0; i<nr_cpu_ids; i++) {
        //struct sched_domain *sdd = d2.sd[i];
        struct sched_domain *sdd = *per_cpu_ptr(d2.sd, i);
        printf("sdd = %p\n", sdd);
        printf("%d: %d, %d, %d, %d\n", i
               , sdd->a, sdd->b, sdd->c, sdd->d);
    }

    printf("test3\n");

    return 0;
}
