//D20201010 Scheduler Study ===============================

CONFIG_PREEMPT_RT

Prio Inv (boost)

irq --> rt-thread (hardirq, softirq)

http://jake.dothome.co.kr/preemption/

//include/linux/preempt.h
preempt_count --> 32bits
preempt_disable() / _enable()
local_bh_disable() / _enable()

schedule out --> prev
schedule in --> next

__schedule(bool preempt)

$ ps -e -o cmd,ni,pri,rtprio

http://jake.dothome.co.kr/scheduler-core/

rt_priority: [99, 1]: User
static_prio: [100, 139]: CFS
prio:        [0, 139]
normal_prio: [0, 139]

$ renice
$ chrt
$ cgcreate
$ cgdelete
$ cgexec
$ taskset

context_switch
switch_mm()
init_mm
ASID
mm->context.id = asid

wakeup_process()
schedule_timeout()

$ nice --help
$ renice --help

set_one_prio()
  set_user_nice(p, nice)


//D20201017 Scheduler BandWidth Study ===============================

init_cfs_bandwidth
sched_cfs_period_timer

throttle_cfs_rq()
  walk_tg_tree_from()

sched_cfs_slack_timer()

/sys/fs/cgroup

task_tick_rt()
  watchdog()


//D20201024 Scheduler RT Study ===============================

/sys/fs/cgroup/cpu
RT_RUNTIME_SHARE --> rt_rq->runtime ++/-- (enable)


//D20201031 Scheduler RT Balance Study ===============================
pick_next_task()
--> balance

/sys/kernel/debug/sched_features


//D20201107 Scheduler DL Study ===============================

sched_tick_dl()

init_dl_task_timer(dl_se)
  timer->function = dl_task_timer(); //period timer

cpudl_heapify_up()


//D20201121 Scheduler DL & CPU Domain Study ===============================

CBS (Constant Bandwidth)
EDF (Earliest Deadline First) + CBS
Energy Aware Scheduling

//CPU topology

parse_dt_topology()
drivers/base/arch_topology.c

//include/linux/arch_topology.h
struct cpu_topology {
        int thread_id;
        int core_id;
        int package_id;
        int llc_id;
        cpumask_t thread_sibling;
        cpumask_t core_sibling;
        cpumask_t llc_sibling;
};

drivers/base/arch_topology.c
parse_core()

//device-tree node
/cpus
  cpu-map
    cluster#
      core#
        thread#

kernel_init_freeable()
  smp_prepare_cpus()
    init_cpu_topology()	//device tree
  smp_init()
    cpu_up(cpu)
  sched_init_smp()
    sched_init_numa()
    sched_init_domains()

//arch/*/kernel/topology.c
store_cpu_topology()

include/linux/cpuhotplug.h

include/linux/sched/topology
#define SD_LOAD_BALANCE		0x0001
...
#define SD_NUMA			0x4000
